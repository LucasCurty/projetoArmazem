generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  avatar   String?

  created_at DateTime @default(now())


  @@map("users")
}

model Nota {
  id                    Int       @id @default(autoincrement())
  numero_nota           String
  data_entrada          DateTime  @default(now())
  client                String
  destinatario          String
  endereco_destinatario String
  cidade                String
  peso                  String
  valor_nota            String
  tipo_produto          String?
  data_saida            DateTime?
  status_entrega        String?

  observacoes String?
  motoristaId Int?
  motorista   Motorista? @relation(fields: [motoristaId], references: [id])

  fretes Frete[]

  @@map("notas")
}

model Motorista {
  id                  Int     @id @default(autoincrement())
  name                String
  cpf_cnpj            String  @unique
  placa               String
  tipo_veiculo        String?
  gerenciamento_risco String?
  Nota                Nota[]
  Frete               Frete[]
}

model Frete {
  id         Int      @id @default(autoincrement())
  data_frete DateTime @default(now())

  peso_total            Float
  frete_empresa         Int
  frete_saida_motorista Int
  quantidade_entregas   Int?
  km_inicial            Int?
  km_final              Int?

  motorista   Motorista? @relation(fields: [motoristaId], references: [id])
  motoristaId Int?

  notas   Nota[]

  @@map("fretes")
}

// model NotasinFretes {
//   nota    Nota[]  @relation(fields: [notaId], references: [id])
//   notaId  Int
//   frete   Frete[] @relation(fields: [freteId], references: [id])
//   freteId Int

//   create_at DateTime @default(now())
//   user      User     @relation(fields: [userId], references: [id])
//   userId    String

//   @@id([notaId, freteId])
// }
